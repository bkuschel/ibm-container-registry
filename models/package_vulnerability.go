

package models




import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// PackageVulnerability package vulnerability
// model PackageVulnerability
type PackageVulnerability struct {

	// cveid
	Cveid []string `json:"cveid"`

	// summary
	Summary string `json:"summary,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this package vulnerability
func (m *PackageVulnerability) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PackageVulnerability) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PackageVulnerability) UnmarshalBinary(b []byte) error {
	var res PackageVulnerability
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
